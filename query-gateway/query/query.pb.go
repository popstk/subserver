// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query-gateway/query/query.proto

package Popstk

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Decode               bool     `protobuf:"varint,2,opt,name=decode,proto3" json:"decode,omitempty"`
	Limit                uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_e038b7e3c7542483, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Request) GetDecode() bool {
	if m != nil {
		return m.Decode
	}
	return false
}

func (m *Request) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Reply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e038b7e3c7542483, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "Popstk.Request")
	proto.RegisterType((*Reply)(nil), "Popstk.Reply")
}

func init() { proto.RegisterFile("query-gateway/query/query.proto", fileDescriptor_e038b7e3c7542483) }

var fileDescriptor_e038b7e3c7542483 = []byte{
	// 259 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x5f, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0x35, 0xa9, 0x1d, 0x28, 0xca, 0x20, 0x1a, 0x8a, 0x60, 0xcc, 0x53, 0x5e, 0xdc,
	0xa0, 0x9e, 0xc0, 0xbe, 0x0a, 0x12, 0xe3, 0x09, 0xb6, 0xcd, 0x10, 0x16, 0xd3, 0xec, 0x76, 0xff,
	0x44, 0x82, 0xf8, 0xe2, 0x15, 0x3c, 0x9a, 0x57, 0xf0, 0x20, 0x92, 0x4d, 0x8a, 0x2f, 0xcb, 0xfe,
	0x86, 0x61, 0xbe, 0xdf, 0x07, 0xd7, 0x7b, 0x47, 0xba, 0xbf, 0xad, 0xb9, 0xa5, 0x77, 0xde, 0xe7,
	0x9e, 0xc6, 0x97, 0x29, 0x2d, 0xad, 0xc4, 0xa8, 0x90, 0xca, 0xd8, 0xb7, 0xd5, 0x55, 0x2d, 0x65,
	0xdd, 0x50, 0xce, 0x95, 0xc8, 0x79, 0xdb, 0x4a, 0xcb, 0xad, 0x90, 0xad, 0x19, 0xb7, 0xd2, 0x27,
	0x98, 0x97, 0xb4, 0x77, 0x64, 0x2c, 0x22, 0x1c, 0x3b, 0x27, 0xaa, 0x38, 0x48, 0x82, 0x6c, 0x51,
	0xfa, 0x3f, 0x5e, 0x40, 0x54, 0xd1, 0x56, 0x56, 0x14, 0xcf, 0x92, 0x20, 0x3b, 0x29, 0x27, 0xc2,
	0x73, 0x08, 0x1b, 0xb1, 0x13, 0x36, 0x3e, 0x4a, 0x82, 0x6c, 0x59, 0x8e, 0x90, 0xde, 0x40, 0x58,
	0x92, 0x6a, 0x7a, 0x8c, 0x61, 0xbe, 0x23, 0x63, 0x78, 0x4d, 0xd3, 0xb5, 0x03, 0xde, 0x3f, 0xc3,
	0xe2, 0xd5, 0x6d, 0x0c, 0xe9, 0x8e, 0x34, 0x3e, 0x42, 0xf8, 0x32, 0x18, 0xe3, 0x29, 0x1b, 0x65,
	0xd9, 0xe4, 0xb2, 0x5a, 0xfe, 0x0f, 0x54, 0xd3, 0xa7, 0xf1, 0xd7, 0xcf, 0xef, 0xf7, 0x0c, 0xf1,
	0x2c, 0xef, 0xee, 0xa6, 0xaa, 0x1f, 0x83, 0xdf, 0xe7, 0x3a, 0x87, 0x4b, 0x21, 0x59, 0xad, 0xd5,
	0x96, 0x99, 0xc3, 0x5d, 0xe6, 0x37, 0xd6, 0xe8, 0x83, 0x3a, 0xd2, 0x3e, 0xa3, 0x18, 0xea, 0x16,
	0xc1, 0x26, 0xf2, 0xbd, 0x1f, 0xfe, 0x02, 0x00, 0x00, 0xff, 0xff, 0x30, 0x59, 0xfe, 0xd4, 0x40,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SubserverClient is the client API for Subserver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubserverClient interface {
	// Sends a greeting
	Query(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type subserverClient struct {
	cc *grpc.ClientConn
}

func NewSubserverClient(cc *grpc.ClientConn) SubserverClient {
	return &subserverClient{cc}
}

func (c *subserverClient) Query(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/Popstk.Subserver/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubserverServer is the server API for Subserver service.
type SubserverServer interface {
	// Sends a greeting
	Query(context.Context, *Request) (*Reply, error)
}

func RegisterSubserverServer(s *grpc.Server, srv SubserverServer) {
	s.RegisterService(&_Subserver_serviceDesc, srv)
}

func _Subserver_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubserverServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Popstk.Subserver/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubserverServer).Query(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Subserver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Popstk.Subserver",
	HandlerType: (*SubserverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _Subserver_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "query-gateway/query/query.proto",
}
